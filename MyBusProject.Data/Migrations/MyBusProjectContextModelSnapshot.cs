// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBusProject.Data.Concrete;

namespace MyBusProject.Data.Migrations
{
    [DbContext(typeof(MyBusProjectContext))]
    partial class MyBusProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("MyBusProject.Entity.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeatCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("BusId");

                    b.ToTable("Busses");
                });

            modelBuilder.Entity("MyBusProject.Entity.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("PassengerId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("MyBusProject.Entity.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cordinate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("MyBusProject.Entity.Station", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoyageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RouteId", "VoyageId");

                    b.HasIndex("VoyageId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("MyBusProject.Entity.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BussId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengerId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("TicketId");

                    b.HasIndex("BusId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MyBusProject.Entity.Voyage", b =>
                {
                    b.Property<int>("VoyageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EndRoute")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("StartRoute")
                        .HasColumnType("TEXT");

                    b.HasKey("VoyageId");

                    b.HasIndex("BusId");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("MyBusProject.Entity.Station", b =>
                {
                    b.HasOne("MyBusProject.Entity.Route", "Route")
                        .WithMany("Stations")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBusProject.Entity.Voyage", "Voyage")
                        .WithMany("Stations")
                        .HasForeignKey("VoyageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Voyage");
                });

            modelBuilder.Entity("MyBusProject.Entity.Ticket", b =>
                {
                    b.HasOne("MyBusProject.Entity.Bus", "Bus")
                        .WithMany("Tickets")
                        .HasForeignKey("BusId");

                    b.HasOne("MyBusProject.Entity.Passenger", "Passengers")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("MyBusProject.Entity.Voyage", b =>
                {
                    b.HasOne("MyBusProject.Entity.Bus", "Bus")
                        .WithMany("Voyages")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("MyBusProject.Entity.Bus", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("Voyages");
                });

            modelBuilder.Entity("MyBusProject.Entity.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MyBusProject.Entity.Route", b =>
                {
                    b.Navigation("Stations");
                });

            modelBuilder.Entity("MyBusProject.Entity.Voyage", b =>
                {
                    b.Navigation("Stations");
                });
#pragma warning restore 612, 618
        }
    }
}
